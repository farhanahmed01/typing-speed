{"ast":null,"code":"var _jsxFileName = \"/Users/farhanahmed/Desktop/react/typing-speed/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useReducer } from \"react\";\nimport Layout from \"./components/Layout\";\nimport TypingArea from \"./components/TypingArea\";\nimport Result from \"./components/Result\";\nimport { allowedKeys, generateRandomWords } from \"./helper\";\nimport ErrorBeep from \"./sound/beep.wav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  inputText: \"Welcome, click start to begin the one-minute typing speed test\",\n  remainingText: \"Welcome, click start to begin the one-minute typing speed test\",\n  completedText: \"\",\n  showStats: false,\n  progress: 0,\n  accuracy: 0,\n  errorIndex: 0,\n  correctIndex: 0,\n  wpm: 0,\n  duration: 60,\n  incorrect: false,\n  started: false\n};\nconst reducer = (state, action) => {\n  const randomWords = generateRandomWords();\n  switch (action.type) {\n    case \"START\":\n      return {\n        ...state,\n        started: true,\n        showStats: false,\n        inputText: randomWords,\n        remainingText: randomWords\n      };\n    case \"END\":\n      return {\n        ...state,\n        started: false,\n        showStats: true,\n        inputText: state.inputText,\n        remainingText: state.remainingText,\n        duration: state.duration\n      };\n    case \"DURATION\":\n      return {\n        ...state,\n        duration: action.payload\n      };\n    case \"ACCURACY\":\n      return {\n        ...state,\n        accuracy: action.payload\n      };\n    case \"WPM\":\n      return {\n        ...state,\n        wpm: action.payload\n      };\n    case \"CORRECT\":\n      return {\n        ...state,\n        progress: state.progress + 1,\n        correctIndex: state.correctIndex + 1,\n        remainingText: state.remainingText.slice(1),\n        completedText: state.completedText + state.remainingText.charAt(0),\n        incorrect: false\n      };\n    case \"INCORRECT\":\n      return {\n        ...state,\n        incorrect: true,\n        errorIndex: state.errorIndex + 1\n      };\n    case \"RESET\":\n      return initialState;\n    default:\n      return state;\n  }\n};\nfunction App() {\n  _s();\n  const [{\n    inputText,\n    remainingText,\n    completedText,\n    showStats,\n    progress,\n    accuracy,\n    errorIndex,\n    correctIndex,\n    wpm,\n    duration,\n    incorrect,\n    started\n  }, dispatch] = useReducer(reducer, initialState);\n  const interval = useRef(null);\n  const areaRef = useRef(null);\n  const errorBeepRef = useRef(null);\n  const handleStart = () => {\n    dispatch({\n      type: \"START\"\n    });\n    if (areaRef.current) areaRef.current.focus();\n\n    // Timer\n    const now = Date.now();\n    const seconds = now + 60 * 1000;\n    interval.current = window.setInterval(() => {\n      const secondLeft = Math.round((seconds - Date.now()) / 1000);\n      if (secondLeft <= 0) {\n        dispatch({\n          type: \"END\"\n        });\n        if (interval.current) window.clearInterval(interval.current);\n      }\n      dispatch({\n        type: \"DURATION\",\n        payload: secondLeft\n      });\n    }, 1000);\n  };\n  const handleKeyDown = e => {\n    if (showStats || !started || duration === 0) return;\n    e.preventDefault();\n    const {\n      key\n    } = e;\n    if (allowedKeys.includes(key) && key !== \"Shift\") {\n      if (key === inputText.charAt(progress)) {\n        dispatch({\n          type: \"CORRECT\"\n        });\n      } else {\n        dispatch({\n          type: \"INCORRECT\"\n        });\n\n        // error sound\n        if (errorBeepRef.current) {\n          errorBeepRef.current.currentTime = 0;\n          errorBeepRef.current.play();\n        }\n      }\n      if (progress > 5) dispatch({\n        type: \"ACCURACY\",\n        payload: Math.floor((progress - errorIndex) / progress * 100)\n      });\n      if (progress + 1 === inputText.length || errorIndex >= 50) dispatch({\n        type: \"END\"\n      });\n      // set wpm\n      dispatch({\n        type: \"WPM\",\n        payload: Math.round(correctIndex / 5)\n      });\n    }\n  };\n  const handleReload = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n    setTimeout(() => handleStart(), 100);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      children: showStats ? /*#__PURE__*/_jsxDEV(Result, {\n        completedText: completedText,\n        inputText: inputText,\n        errorIndex: errorIndex,\n        accuracy: accuracy,\n        wpm: wpm,\n        showStats: showStats,\n        handleReload: handleReload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TypingArea, {\n        completedText: completedText,\n        inputText: inputText,\n        errorIndex: errorIndex,\n        duration: duration,\n        started: started,\n        incorrect: incorrect,\n        areaRef: areaRef,\n        handleKeyDown: handleKeyDown,\n        remainingText: remainingText,\n        handleStart: handleStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: ErrorBeep,\n      ref: errorBeepRef,\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"UFPEoV5yLqemzNLXZjLZg0+16CA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useReducer","Layout","TypingArea","Result","allowedKeys","generateRandomWords","ErrorBeep","initialState","inputText","remainingText","completedText","showStats","progress","accuracy","errorIndex","correctIndex","wpm","duration","incorrect","started","reducer","state","action","randomWords","type","payload","slice","charAt","App","dispatch","interval","areaRef","errorBeepRef","handleStart","current","focus","now","Date","seconds","window","setInterval","secondLeft","Math","round","clearInterval","handleKeyDown","e","preventDefault","key","includes","currentTime","play","floor","length","handleReload","setTimeout"],"sources":["/Users/farhanahmed/Desktop/react/typing-speed/src/App.tsx"],"sourcesContent":["import React, { useRef, useReducer } from \"react\";\nimport Layout from \"./components/Layout\";\nimport TypingArea from \"./components/TypingArea\";\nimport Result from \"./components/Result\";\nimport { allowedKeys, generateRandomWords } from \"./helper\";\nimport ErrorBeep from \"./sound/beep.wav\";\n\nconst initialState = {\n  inputText: \"Welcome, click start to begin the one-minute typing speed test\",\n  remainingText: \"Welcome, click start to begin the one-minute typing speed test\",\n  completedText: \"\",\n  showStats: false,\n  progress: 0,\n  accuracy: 0,\n  errorIndex: 0,\n  correctIndex: 0,\n  wpm: 0,\n  duration: 60,\n  incorrect: false,\n  started: false\n};\n\ntype State = typeof initialState;\n\ntype Action =\n  | { type: \"START\" }\n  | { type: \"END\" }\n  | { type: \"DURATION\"; payload: number }\n  | { type: \"ACCURACY\"; payload: number }\n  | { type: \"WPM\"; payload: number }\n  | { type: \"CORRECT\" }\n  | { type: \"INCORRECT\" }\n  | { type: \"RESET\" };\n\nconst reducer = (state: State, action: Action): State => {\n  const randomWords = generateRandomWords();\n\n  switch (action.type) {\n    case \"START\":\n      return {\n        ...state,\n        started: true,\n        showStats: false,\n        inputText: randomWords,\n        remainingText: randomWords\n      };\n    case \"END\":\n      return {\n        ...state,\n        started: false,\n        showStats: true,\n        inputText: state.inputText,\n        remainingText: state.remainingText,\n        duration: state.duration\n      };\n    case \"DURATION\":\n      return {\n        ...state,\n        duration: action.payload\n      };\n    case \"ACCURACY\":\n      return {\n        ...state,\n        accuracy: action.payload\n      };\n    case \"WPM\":\n      return {\n        ...state,\n        wpm: action.payload\n      };\n    case \"CORRECT\":\n      return {\n        ...state,\n        progress: state.progress + 1,\n        correctIndex: state.correctIndex + 1,\n        remainingText: state.remainingText.slice(1),\n        completedText: state.completedText + state.remainingText.charAt(0),\n        incorrect: false\n      };\n    case \"INCORRECT\":\n      return {\n        ...state,\n        incorrect: true,\n        errorIndex: state.errorIndex + 1\n      };\n    case \"RESET\":\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [\n    {\n      inputText,\n      remainingText,\n      completedText,\n      showStats,\n      progress,\n      accuracy,\n      errorIndex,\n      correctIndex,\n      wpm,\n      duration,\n      incorrect,\n      started\n    },\n    dispatch\n  ] = useReducer(reducer, initialState);\n\n  const interval = useRef<number | null>(null);\n  const areaRef = useRef<HTMLDivElement | null>(null);\n  const errorBeepRef = useRef<HTMLAudioElement | null>(null);\n\n  const handleStart = () => {\n    dispatch({ type: \"START\" });\n    if (areaRef.current) areaRef.current.focus();\n\n    // Timer\n    const now = Date.now();\n    const seconds = now + 60 * 1000;\n\n    interval.current = window.setInterval(() => {\n      const secondLeft = Math.round((seconds - Date.now()) / 1000);\n      if (secondLeft <= 0) {\n        dispatch({ type: \"END\" });\n        if (interval.current) window.clearInterval(interval.current);\n      }\n      dispatch({ type: \"DURATION\", payload: secondLeft });\n    }, 1000);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<Element>) => {\n    if (showStats || !started || duration === 0) return;\n\n    e.preventDefault();\n    const { key } = e;\n\n    if (allowedKeys.includes(key) && key !== \"Shift\") {\n      if (key === inputText.charAt(progress)) {\n        dispatch({ type: \"CORRECT\" });\n      } else {\n        dispatch({ type: \"INCORRECT\" });\n\n        // error sound\n        if (errorBeepRef.current) {\n          errorBeepRef.current.currentTime = 0;\n          errorBeepRef.current.play();\n        }\n      }\n      if (progress > 5)\n        dispatch({\n          type: \"ACCURACY\",\n          payload: Math.floor(((progress - errorIndex) / progress) * 100)\n        });\n\n      if (progress + 1 === inputText.length || errorIndex >= 50) dispatch({ type: \"END\" });\n      // set wpm\n      dispatch({ type: \"WPM\", payload: Math.round(correctIndex / 5) });\n    }\n  };\n\n  const handleReload = () => {\n    dispatch({ type: \"RESET\" });\n    setTimeout(() => handleStart(), 100);\n  };\n\n  return (\n    <>\n      <Layout>\n        {showStats ? (\n          <Result\n            completedText={completedText}\n            inputText={inputText}\n            errorIndex={errorIndex}\n            accuracy={accuracy}\n            wpm={wpm}\n            showStats={showStats}\n            handleReload={handleReload}\n          />\n        ) : (\n          <TypingArea\n            completedText={completedText}\n            inputText={inputText}\n            errorIndex={errorIndex}\n            duration={duration}\n            started={started}\n            incorrect={incorrect}\n            areaRef={areaRef}\n            handleKeyDown={handleKeyDown}\n            remainingText={remainingText}\n            handleStart={handleStart}\n          />\n        )}\n      </Layout>\n      {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n      <audio src={ErrorBeep} ref={errorBeepRef} hidden />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}